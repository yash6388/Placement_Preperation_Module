problem 1: Rotate Matrix
sol-
void rotate(vector<vector<int>>& matrix) {
         int n = matrix.size();
        // Taking Transpose
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++)
                swap(matrix[i][j], matrix[j][i]);
        }
        
        // Reversing each row
        for(int i=0;i<n;i++){
            for(int j=0;j<n/2;j++){
                swap(matrix[i][j], matrix[i][n-j-1]);
            }
        }
    }
Problem 2: Merge Intervals
sol-
vector<vector<int>> merge(vector<vector<int>>& intervals) {
        vector<vector<int>> mergedintervals;
        if(intervals.size()==0)
        return mergedintervals;
        sort(intervals.begin(),intervals.end());
        vector<int> temp = intervals[0];
        
        for(auto it:intervals){
            if(it[0]<=temp[1]){
                temp[1]=max(it[1],temp[1]);
            }else{
                mergedintervals.push_back(temp);
                temp = it;
            }
            
        }
        mergedintervals.push_back(temp);
        return mergedintervals;

    }
Problem 3- Merge Sorted Arrays
sol-
 void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
               
   for(int i = 0 ; i < n ; i++)
            nums1[i + m] = nums2[i];
            // Sort the 1st array...
            sort(nums1.begin() , nums1.end());
        
    
    }
