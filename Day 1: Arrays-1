Problem 1- Set Matrix Zeroes
sol- 
 void setZeroes(vector<vector<int>>& matrix) {
      int col0 = 1, rows = matrix.size(), cols = matrix[0].size();
        for(int i = 0; i<rows; i++)
        {
            if(matrix[i][0] == 0) col0 = 0;
            for(int j = 1; j<cols; j++)
            {
                if(matrix[i][j] == 0)
                {
                    matrix[i][0] = matrix[0][j] = 0;
                }
            }
        } 

        for(int i = rows - 1; i>=0; i--)
        {
            for(int j = cols-1; j>=1; j--)
            {
                if(matrix[i][0] == 0 || matrix[0][j] == 0)
                {
                    matrix[i][j] = 0;
                }
            }

            if(col0 == 0) matrix[i][0] = 0;
        }

    }
Problem-2: Pascals's Triangle
sol-
vector<vector<int>> generate(int numRows) {
        vector<vector<int>> r(numRows);
        for(int i=0;i<numRows;i++)
        {
            r[i].resize(i + 1);
            r[i][0] = r[i][i] = 1;
        
        for(int j=1;j<i;j++)
        {
         r[i][j] = r[i-1][j-1] +  r[i-1][j];
        }
        }
        return r;
    }

Problem-3: Next Permutation
sol-
 void nextPermutation(vector<int>& nums) {
        next_permutation(nums.begin(),nums.end());
    }
Problem-4: Kadane's Algorithm
sol-
int maxSubArray(vector<int>& nums) {
        int best=INT_MIN,sum=0;
        for(int i=0;i<nums.size();i++){
            sum=max(nums[i],sum+nums[i]);
            best=max(best,sum);
        }
        return best;
    }
Problem 5: sort 0,1and2
sol-
void sortColors(vector<int>& nums) {
        
        int s=0,e=nums.size()-1;

        int count_0=0,count_2=0;
        
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]==0)
            count_0++;
            if(nums[i]==2)
            count_2++;
        }

        int count_1=nums.size()-(count_0+count_2);
        cout<<count_1;

        for(int i=0;i<count_0;i++)
        {
            nums[i]=0;
        }

        for(int i=count_0;i<count_0+count_1;i++)
        {
            nums[i]=1;
        }

        for(int i=count_0+count_1;i<count_0+count_1+count_2;i++)
        {
            nums[i]=2;
        }

    }
Problem 6- Best Time to Buy and Sell Stock
sol-
int maxProfit(vector<int>& prices) {
        int mini = prices[0];
        int profit = 0;
        for(int i=1;i<prices.size();i++){
            int diff = prices[i]-mini;
            profit  = max(profit,diff);
            mini = min(mini,prices[i]);
        }
        return profit;
    }
